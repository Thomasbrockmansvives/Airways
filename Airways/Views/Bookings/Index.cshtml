@model List<Airways.ViewModels.BookingVM>


@{
    ViewData["Title"] = "My Bookings";
}

<div class="container mt-4">
    <h2>My Bookings</h2>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    @if (Model == null || !Model.Any())
    {
        <partial name="_NoBookings" />
    }
    else
    {
        <div class="row">
            <div class="col-md-8" id="bookings-container">
                <div class="table-responsive">
                    <table class="table table-striped small-table">
                        <thead>
                            <tr class="small-header">
                                <th>Booking ID</th>
                                <th>Flight Date</th>
                                <th>From</th>
                                <th>To</th>
                                <th>Times</th>
                                <th>Class</th>
                                <th>Meal</th>
                                <th>Seat</th>
                                <th>Status</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody class="small-text">
                            @foreach (var booking in Model)
                            {
                                <tr>
                                    <td>
                                        @booking.BookingId
                                        <small class="d-block">Booked: @booking.BookingDate.ToString("yyyy-MM-dd")</small>
                                    </td>
                                    <td>@booking.FlightDate.ToString("yyyy-MM-dd")</td>
                                    <td>@booking.DepartureCity</td>
                                    <td>@booking.ArrivalCity</td>
                                    <td>
                                        @booking.DepartureTime.ToString("HH:mm") - @booking.ArrivalTime.ToString("HH:mm")
                                    </td>
                                    <td>@booking.Class</td>
                                    <td>@booking.MealName</td>
                                    <td>@(booking.SeatNumber == 0 ? "N/A" : booking.SeatNumber.ToString())</td>
                                    <td><span class="badge @GetStatusBadgeClass(booking.Status)">@booking.Status</span></td>
                                    <td>€@booking.TotalPrice.ToString("0.00")</td>
                                    <td>
                                        
                                        @if (booking.IsInFuture && booking.SeatNumber > 0)
                                        {
                                            <a asp-controller="Bookings"
                                               asp-action="FindRapidApiDestinations"
                                               asp-route-city="@booking.ArrivalCity"
                                               class="btn btn-sm btn-dark mt-1">
                                                Find Hotels
                                            </a>
                                        }
                                        @if (booking.CanCancel)
                                        {
                                            <form asp-action="CancelBooking" method="post" onsubmit="return confirm('Are you sure you want to cancel this booking?');">
                                                <input type="hidden" name="bookingId" value="@booking.BookingId" />
                                                <button type="submit" class="btn btn-sm btn-danger">Cancel</button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="col-md-4" id="hotels-container">
                @if (ViewData["DestinationData"] != null)
                {
                    @await Html.PartialAsync("_RapidApiDestinationResults", (Airways.ViewModels.RapidApiDestinationVM)ViewData["DestinationData"])
                }
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        switch (status)
        {
            case "Booked": return "bg-success";
            case "Cancelled": return "bg-danger";
            case "Done": return "bg-secondary";
            case "Flying": return "bg-primary";
            case "Boarding": return "bg-warning";
            case "Checking In": return "bg-info";
            default: return "bg-dark";
        }
    }
}

@section Scripts {
    <script>
        function findHotels(city, date) {
            fetch(`/Bookings/LookForHotels?city=${encodeURIComponent(city)}&date=${encodeURIComponent(date)}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('hotels-container').innerHTML = data;
                })
                .catch(error => {
                    console.error('Error fetching hotel data:', error);
                });
        }
    </script>
}