@model Airways.ViewModels.FlightSearchVM
@{
    ViewData["Title"] = "Search a flight";
}
<div class="container">
    <div class="row mt-4">
        <div class="col-12">
            <h3 class="small-header">Search a flight</h3>
            <hr />
            <div id="search-form-container">
                @await Html.PartialAsync("_FlightSearch", Model)
            </div>
            <div id="search-results-container">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to reset the form and clear validations
            function resetForm() {
                // Reset form fields
                $('#departureCitySelect').val('');
                $('#arrivalCitySelect').val('');
                $('#StartDate').val('');
                $('#EndDate').val('');

                // Clear validation error messages
                $('.field-validation-error').text('');
                $('[data-valmsg-for]').text('');
                $('div[asp-validation-summary="All"]').text('');

                // Set default dates
                var minDate = '@DateTime.Now.AddDays(3).ToString("yyyy-MM-dd")';
                var defaultEndDate = '@DateTime.Now.AddMonths(1).ToString("yyyy-MM-dd")';

                $('#StartDate').val(minDate);
                $('#EndDate').val(defaultEndDate);
            }

            // Attach reset functionality to the reset button
            $('button[type="reset"]').click(function (e) {
                e.preventDefault(); // Prevent default reset behavior
                resetForm();
            });

            // Validate date range function (keep the existing implementation)
            function validateDateRange() {
                var hasError = false;
                var errorMessages = [];

                // Clear previous error messages
                $('.field-validation-error').text('');
                $('[data-valmsg-for]').text('');

                // Check departure and arrival cities
                var departureId = $('#departureCitySelect').val();
                var arrivalId = $('#arrivalCitySelect').val();

                if (!departureId) {
                    $('#departureCitySelect-error').text('Please select a departure city');
                    hasError = true;
                }

                if (!arrivalId) {
                    $('#arrivalCitySelect-error').text('Please select a destination city');
                    hasError = true;
                }

                if (departureId === arrivalId && departureId !== "") {
                    $('#departureCitySelect-error').text('Departure and destination cities cannot be the same');
                    hasError = true;
                }

                // Check dates
                var startDate = new Date($('#StartDate').val());
                var endDate = new Date($('#EndDate').val());
                var minDate = new Date('@DateTime.Now.AddDays(3).ToString("yyyy-MM-dd")');
                var maxDate = new Date('@DateTime.Now.AddMonths(6).ToString("yyyy-MM-dd")');

                if (!$('#StartDate').val()) {
                    $('#StartDate-error').text('Please select a start date');
                    hasError = true;
                }

                if (!$('#EndDate').val()) {
                    $('#EndDate-error').text('Please select an end date');
                    hasError = true;
                }

                // Check date range
                if (startDate > endDate) {
                    $('#StartDate-error').text('Start date must be before or equal to end date');
                    hasError = true;
                }

                // Check date constraints
                if (startDate < minDate || endDate > maxDate) {
                    $('#StartDate-error').text('Flights must be booked 3 days to 6 months in advance');
                    hasError = true;
                }

                return !hasError;
            }

            // Client-side validation before form submission
            $('#flightSearchForm').submit(function (e) {
                if (!validateDateRange()) {
                    e.preventDefault();
                    return false;
                }
                return true;
            });

            // Validate on input changes
            $('#departureCitySelect, #arrivalCitySelect, #StartDate, #EndDate').change(validateDateRange);

            // Set initial default dates
            var minDate = '@DateTime.Now.AddDays(3).ToString("yyyy-MM-dd")';
            var defaultEndDate = '@DateTime.Now.AddMonths(1).ToString("yyyy-MM-dd")';

            $('#StartDate').val(minDate);
            $('#EndDate').val(defaultEndDate);
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}