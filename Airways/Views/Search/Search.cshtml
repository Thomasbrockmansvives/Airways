@model Airways.ViewModels.FlightSearchVM
@{
    ViewData["Title"] = "Search a flight";
}
<div class="container">
    <div class="row mt-4">
        <div class="col-12">
            <h3 class="small-header">Search a flight</h3>
            <hr />
            <div class="alert alert-info d-flex align-items-center" role="alert">
                <i class="bi bi-info-circle me-3 fs-4"></i>
                <div>
                    <strong>STEP 1: </strong>Choose your departure, destination and travel day
                </div>
            </div>
            <div id="search-form-container">
                @await Html.PartialAsync("_FlightSearch", Model)
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-8" id="search-results-container">
            @if (Model.SearchResults != null)
            {
                @await Html.PartialAsync("_SearchResults", Model.SearchResults)
            }
        </div>
        <div class="col-4" id="booking-details-container">
            <!-- rendering of third partial -->
        </div>
    </div>
</div>

<script>// called from partial _searchResults.cshtml
    function customizeFlight(flightId, travelDate, priceEconomy, priceBusiness, flightNumber) {
        console.log("Customizing flight:", flightId, travelDate, priceEconomy, priceBusiness, flightNumber);

        // Replace commas with periods for URL encoding
        priceEconomy = priceEconomy.replace(',', '.');
        priceBusiness = priceBusiness.replace(',', '.');

        fetch(`/Search/CustomizeFlight?flightId=${flightId}&travelDate=${travelDate}&priceEconomy=${priceEconomy}&priceBusiness=${priceBusiness}&flightNumber=${flightNumber}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(data => {
                document.getElementById('booking-details-container').innerHTML = data;
                console.log("Flight details loaded");
            })
            .catch(error => {
                console.error('Error fetching flight details:', error);
            });
    }

    // Function to handle form submission via AJAX
    document.addEventListener('DOMContentLoaded', function () {
        // This uses event delegation to catch the form submission
        document.body.addEventListener('submit', function (e) {
            // Check if it's our add to cart form
            if (e.target.id === 'addToCartForm') {
                e.preventDefault();

                const formData = new FormData(e.target);

                fetch('/Search/AddToCartSimple', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('booking-details-container').innerHTML = data;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        });
    });
</script>